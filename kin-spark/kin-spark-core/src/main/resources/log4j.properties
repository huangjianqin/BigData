# level, appendername
# org.apache.log4j.ConsoleAppender
# org.apache.log4j.FileAppender
# org.apache.log4j.DailyRollingFileAppender
# org.apache.log4j.RollingFileAppender
# org.apache.log4j.WriterAppender
#
# org.apache.log4j.HTMLLayout
# org.apache.log4j.PatternLayout
# org.apache.log4j.SimpleLayout 包含日志信息的级别和信息字符串
# org.apache.log4j.TTCCLayout 包含日志产生的时间、线程、类别等等信息

# log4j.logger.packageName=level 设置不同package的日志输出级别
log4j.rootCategory=INFO,console
log4j.rootLogger=INFO,console

log4j.logger.org.apache.spark=WARN
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=WARN
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=WARN
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR
log4j.logger.org.apache.kafka=WARN
log4j.logger.org.apache.hadoop=WARN
log4j.logger.org.apache.zookeeper=WARN

log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#example: [INFO] 2017-02-09 22:54:30 774 [main] | LogTest.main(10) : testing
log4j.appender.console.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss SSS} [%t] | %C.%M(%L) : %m %n

#log4j.appender.node=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.node.File=
##第二天会将前一天的日志添加后缀
#log4j.appender.node.DatePattern='.'yyyy-MM-dd
#log4j.appender.node.Append=true
#log4j.appender.error.Threshold=INFO
##log4j.appender.file.MaxFileSize=5MB
##log4j.appender.file.MaxBackupIndex=200
#log4j.appender.node.layout=org.apache.log4j.PatternLayout
#log4j.appender.node.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH\:mm\:ss SSS} [%t] | %C.%M(%L) : %m %n